{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"nanoid\";\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [{\n    id: 1,\n    title: \"todo1\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"todo2\",\n    completed: false\n  }, {\n    id: 3,\n    title: \"todo3\",\n    completed: true\n  }],\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: Date.now(),\n        title: action.payload.title,\n        completed: false\n      };\n      state.push(newTodo);\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/ngoctaucao/Desktop/projects/todolist-app/src/redux/todoSlice.js"],"names":["createAsyncThunk","createSlice","nanoid","todoSlice","name","initialState","id","title","completed","reducers","addTodo","state","action","newTodo","Date","now","payload","push"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,OADsB;AAE5BC,EAAAA,YAAY,EAAE,CACZ;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GADY,EAEZ;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GAFY,EAGZ;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GAHY,CAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxB,YAAMC,OAAO,GAAG;AACZP,QAAAA,EAAE,EAAEQ,IAAI,CAACC,GAAL,EADQ;AAEZR,QAAAA,KAAK,EAAEK,MAAM,CAACI,OAAP,CAAeT,KAFV;AAGZC,QAAAA,SAAS,EAAE;AAHC,OAAhB;AAKAG,MAAAA,KAAK,CAACM,IAAN,CAAWJ,OAAX;AACH;AARO;AAPkB,CAAD,CAA7B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: [\r\n    { id: 1, title: \"todo1\", completed: false },\r\n    { id: 2, title: \"todo2\", completed: false },\r\n    { id: 3, title: \"todo3\", completed: true },\r\n  ],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n        const newTodo = {\r\n            id: Date.now(),\r\n            title: action.payload.title,\r\n            completed: false,\r\n        };\r\n        state.push(newTodo);\r\n    },\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}